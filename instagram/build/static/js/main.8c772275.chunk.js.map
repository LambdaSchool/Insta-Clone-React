{"version":3,"sources":["utilities/dummy_data.js","components/CommentSection/Comment.js","components/CommentSection/CommentSection.js","components/PostContainer/Post.js","components/PostContainer/PostContainer.js","components/SearchBar/SearchBar.js","components/Login/Login.js","components/PostContainer/PostPage.js","components/Authentication/Authenticate.js","App.js","serviceWorker.js","index.js"],"names":["dummyData","username","thumbnailUrl","imageUrl","likes","timestamp","comments","text","Comment","props","react_default","a","createElement","className","comment","CommentSection","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","event","setState","objectSpread","state","commentText","target","value","addComment","preventDefault","toConsumableArray","concat","window","localStorage","getItem","react","map","index","CommentSection_Comment","key","moment","fromNow","toUpperCase","onSubmit","type","name","placeholder","onChange","Component","Post","incrementLikes","classList","contains","prevState","toggle","post","src","alt","onClick","components_CommentSection_CommentSection","PostContainer","posts","postElement","PostContainer_Post","nextProps","filter","includes","searchQuery","SearchBar","onSearch","logOut","Login","submitLogin","setItem","usernameText","defineProperty","passwordText","Authenticate","WrappedComponent","_Component","_class2","setUsername","inherits","createClass","removeItem","location","reload","components_Login_Login","PostPage","_this2","components_SearchBar_SearchBar","components_PostContainer_PostContainer","App","PostContainer_PostPage","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+VAkFiBA,EAlFC,CACd,CACEC,SAAU,cACVC,aACE,oHAEFC,SACE,0FACFC,MAAO,IACPC,UAAW,8BACXC,SAAU,CACR,CACEL,SAAU,cACVM,KACE,qEAEJ,CACEN,SAAU,eACVM,KAAM,oBAER,CACEN,SAAU,eACVM,KAAM,2BAIZ,CACEN,SAAU,WACVC,aACE,4HACFC,SACE,6HACFC,MAAO,KACPC,UAAW,8BACXC,SAAU,CACR,CACEL,SAAU,SACVM,KAAM,6DAER,CACEN,SAAU,kBACVM,KAAM,4BAER,CACEN,SAAU,wBACVM,KAAM,gBAER,CACEN,SAAU,gBACVM,KAAM,qBAER,CACEN,SAAU,gBACVM,KAAM,QAIZ,CACEN,SAAU,kBACVC,aACE,6HACFC,SACE,uFACFC,MAAO,KACPC,UAAW,8BACXC,SAAU,CACR,CACEL,SAAU,kBACVM,KAAM,mBAER,CACEN,SAAU,eACVM,KAAM,sDAER,CACEN,SAAU,cACVM,KAAM,0ECrDDC,MAbf,SAAiBC,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,YACKH,EAAMK,QAAQb,UAElBQ,EAAMK,QAAQP,yBCkDhBQ,cA5DX,SAAAA,EAAYN,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMV,KAeVc,cAAgB,SAACC,GACbR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACOD,EAAKW,MADZ,CAEIC,YAAaJ,EAAMK,OAAOC,UAnBfd,EAuBnBe,WAAa,SAACP,GACVA,EAAMQ,iBACNhB,EAAKS,SAAS,CACVnB,SAASW,OAAAgB,EAAA,EAAAhB,CAAKD,EAAKW,MAAMrB,UAAjB4B,OAAA,CAA2B,CAC/BjC,SAAUe,EAAKW,MAAM1B,SACrBM,KAAMS,EAAKW,MAAMC,gBAEtB,WACCZ,EAAKS,SAAS,CACVG,YAAa,QA9BrBZ,EAAKW,MAAQ,CACTrB,SAAU,GACVL,SAAUkC,OAAOC,aAAaC,QAAQ,aAJ3BrB,mFASfG,KAAKM,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACOE,KAAKQ,MADZ,CAEIrB,SAAUa,KAAKV,MAAMH,SACrBsB,YAAa,uCA0BjB,OACIlB,EAAAC,EAAAC,cAAC0B,EAAA,SAAD,KACKnB,KAAKQ,MAAMrB,SAASiC,IAAI,SAACzB,EAAS0B,GAAV,OAAoB9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAS3B,QAASA,EAAS4B,IAAKF,MAC7E9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACP8B,IAAOxB,KAAKV,MAAMJ,UAAW,2BAA2BuC,UAAWC,eAEzEnC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAciC,SAAU3B,KAAKY,YACzCrB,EAAAC,EAAAC,cAAA,SAAOmC,KAAK,OAAOC,KAAK,cAAcC,YAAY,mBAAmBnB,MAAOX,KAAKQ,MAAMC,YAAasB,SAAU/B,KAAKI,yBA9C1G4B,aCsEdC,cApEX,SAAAA,EAAY3C,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACfpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMV,KAaV4C,eAAiB,SAAC7B,GACTA,EAAMK,OAAOyB,UAAUC,SAAS,OAO5B/B,EAAMK,OAAOyB,UAAUC,SAAS,QACrCvC,EAAKS,SAAS,SAAC+B,GACX,MAAO,CACHpD,MAAOoD,EAAUpD,MAAQ,KATjCY,EAAKS,SAAS,SAAC+B,GACX,MAAO,CACHpD,MAAOoD,EAAUpD,MAAQ,KAWrCoB,EAAMK,OAAOyB,UAAUG,OAAO,QA3B9BzC,EAAKW,MAAQ,CACTvB,MAAO,GAHIY,mFASfG,KAAKM,SAAS,CACVrB,MAAOe,KAAKV,MAAMiD,KAAKtD,yCAuB3B,OACIM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAK+C,IAAG,GAAAzB,OAAKf,KAAKV,MAAMiD,KAAKxD,cAAgBW,UAAU,yBAAyB+C,IAAI,cACpFlD,EAAAC,EAAAC,cAAA,YAAOO,KAAKV,MAAMiD,KAAKzD,WAE3BS,EAAAC,EAAAC,cAAA,OAAK+C,IAAG,GAAAzB,OAAKf,KAAKV,MAAMiD,KAAKvD,UAAYU,UAAU,aAAa+C,IAAI,SACpElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGiD,QAAS1C,KAAKkC,eAAgBxC,UAAU,iBAC3CH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,YAAOO,KAAKQ,MAAMvB,MAAlB,WAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACkD,EAAD,CAAgBxD,SAAUa,KAAKV,MAAMiD,KAAKpD,SAAUD,UAAWc,KAAKV,MAAMiD,KAAKrD,sBAnDpF8C,aC8BJY,cA9BX,SAAAA,EAAYtD,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACf/C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAzC,KAAAH,KAAMV,KACDkB,MAAQ,CACTqC,MAAOvD,EAAMuD,OAHFhD,wEAef,OACIN,EAAAC,EAAAC,cAAC0B,EAAA,SAAD,KACKnB,KAAKQ,MAAMqC,MAAMzB,IAAI,SAAC0B,EAAazB,GAAd,OAAwB9B,EAAAC,EAAAC,cAACsD,EAAD,CAAMR,KAAMO,EAAavB,IAAKF,0DAVxD2B,GAE5B,MAAQ,CACJH,MAFQG,EAAUH,MAAMI,OAAO,SAAAH,GAAW,OAAIA,EAAYhE,SAASoE,SAArB,GAAAnC,OAAiCiC,EAAUG,wBATzEnB,aCmCboB,qBAnCX,SAAAA,EAAY9D,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACfvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,KAAMV,KAMVc,cAAgB,SAACC,GACbR,EAAKS,SAAS,CACV6C,YAAa9C,EAAMK,OAAOC,OAC3B,WAAOd,EAAKP,MAAM+D,SAASxD,EAAKW,MAAM2C,gBARzCtD,EAAKW,MAAQ,CACT2C,YAAa,IAHFtD,wEAcf,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,qBAAqBC,IAAI,UAGtClD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYkC,KAAK,OAAOE,YAAY,SAASnB,MAAOX,KAAKQ,MAAM2C,YAAapB,SAAU/B,KAAKI,gBAE5Gb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,cAAcC,IAAI,YAC3BlD,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,WAAWC,IAAI,SACxBlD,EAAAC,EAAAC,cAAA,OAAKiD,QAAS1C,KAAKV,MAAMgE,OAAQd,IAAI,YAAYC,IAAI,mBA5BjDT,qBCmDTuB,qBAnDX,SAAAA,EAAYjE,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACf1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMV,KAQVkE,YAAc,WACVxC,OAAOC,aAAawC,QAAQ,WAAY5D,EAAKW,MAAMkD,cACnD7D,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACOD,EAAKW,MADZ,CAEI1B,SAAUkC,OAAOC,aAAaC,QAAQ,gBAb3BrB,EAiBnBO,cAAgB,SAACC,GACbR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACOD,EAAKW,MADZV,OAAA6D,EAAA,EAAA7D,CAAA,GAEKO,EAAMK,OAAOmB,KAAOxB,EAAMK,OAAOC,UAlBtCd,EAAKW,MAAQ,CACTkD,aAAc,GACdE,aAAc,GACd9E,SAAU,IALCe,wEAyBf,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMkC,SAAU3B,KAAKwD,aACjBjE,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,qBAAqBC,IAAI,SAClClD,EAAAC,EAAAC,cAAA,SAAOsC,SAAU/B,KAAKI,cAAeyB,KAAK,eAAenC,UAAU,cAAckC,KAAK,OAAOjB,MAAOX,KAAKQ,MAAMkD,aAAc5B,YAAY,qCACzIvC,EAAAC,EAAAC,cAAA,SAAOsC,SAAU/B,KAAKI,cAAeyB,KAAK,eAAenC,UAAU,iBAAiBkC,KAAK,WAAWjB,MAAOX,KAAKQ,MAAMoD,aAAc9B,YAAY,aAChJvC,EAAAC,EAAAC,cAAA,UAAQmC,KAAK,UAAb,UACArC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,MACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8C,IAAI,wBAAwBC,IAAI,aAC1DlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,qBAEJH,EAAAC,EAAAC,cAAA,UAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBA7CfsC,cC6BL6B,EC7BM,SAACC,GAGlB,gBAAAC,GACI,SAAAC,EAAY1E,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IACfnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,KAAMV,KAMV2E,YAAc,SAACnF,GACXe,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACOD,EAAKW,MADZ,CAEI1B,SAAUA,MARde,EAAKW,MAAQ,CACT1B,SAAU,IAHCe,EADvB,OAAAC,OAAAoE,EAAA,EAAApE,CAAAkE,EAAAD,GAAAjE,OAAAqE,EAAA,EAAArE,CAAAkE,EAAA,EAAAzC,IAAA,SAAAZ,MAAA,WAgBQK,OAAOC,aAAamD,WAAW,YAC/BpD,OAAOqD,SAASC,WAjBxB,CAAA/C,IAAA,SAAAZ,MAAA,WAqBQ,OAAQK,OAAOC,aAAaC,QAAQ,YAE5B3B,EAAAC,EAAAC,cAACqE,EAAD,CAAkBR,OAAQtD,KAAKsD,SAG/B/D,EAAAC,EAAAC,cAAC8E,EAAD,UA1BhBP,EAAA,CAAqBhC,aD0BV6B,aAzBb,SAAAW,IAAc,IAAA3E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IACZ3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,QACKQ,MAAQ,CACXqC,MAAOhE,EACPsE,YAAa,IAJHtD,wEAQLsD,GACPnD,KAAKM,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACKE,KAAKQ,MADV,CAEE2C,kDAIK,IAAAsB,EAAAzE,KACP,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiF,EAAD,CAAWpB,OAAQtD,KAAKV,MAAMgE,OAAQD,SAAU,SAACF,GAAD,OAAiBsB,EAAKpB,SAASF,MAC/E5D,EAAAC,EAAAC,cAACkF,EAAD,CAAexB,YAAanD,KAAKQ,MAAM2C,YAAaN,MAAO7C,KAAKQ,MAAMqC,gBApBvDb,cEaR4C,cAdb,SAAAA,IAAc,IAAA/E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACZ/E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8E,GAAAzE,KAAAH,QACKQ,MAAQ,GAFDX,wEAQZ,OACEN,EAAAC,EAAAC,cAACoF,EAAD,aAVY7C,aCQE8C,QACW,cAA7B9D,OAAOqD,SAASU,UAEe,UAA7B/D,OAAOqD,SAASU,UAEhB/D,OAAOqD,SAASU,SAASC,MACvB,2DCZNC,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8c772275.chunk.js","sourcesContent":["const dummyData = [\n    {\n      username: \"philzcoffee\",\n      thumbnailUrl:\n        \"https://tk-assets.lambdaschool.com/ecd33d34-c124-4b75-92d2-e5c52c171ed8_11201517_887808411287357_1307163552_a.jpg\",\n  \n      imageUrl:\n        \"https://tk-assets.lambdaschool.com/69cf901b-f96d-466e-a745-ff2a01effac9_philz-image.jpg\",\n      likes: 400,\n      timestamp: \"July 17th 2017, 12:42:40 pm\",\n      comments: [\n        {\n          username: \"philzcoffee\",\n          text:\n            \"We've got more than just delicious coffees to offer at our shops!\"\n        },\n        {\n          username: \"biancasaurus\",\n          text: \"Looks delicious!\"\n        },\n        {\n          username: \"martinseludo\",\n          text: \"Can't wait to try it!\"\n        }\n      ]\n    },\n    {\n      username: \"fortnite\",\n      thumbnailUrl:\n        \"https://tk-assets.lambdaschool.com/ce601fdf-7cb0-4098-83d3-1a1584a72513_30841289_342445456281079_112845064497004544_n.jpg\",\n      imageUrl:\n        \"https://tk-assets.lambdaschool.com/89d13918-b7a2-4b40-9658-f376ea3f6b59_37131538_213683546146400_1083714364399157248_n.jpg\",\n      likes: 4307,\n      timestamp: \"July 15th 2017, 03:12:09 pm\",\n      comments: [\n        {\n          username: \"twitch\",\n          text: \"Epic Street Fighter action here in Las Vegas at #EVO2017!\"\n        },\n        {\n          username: \"michaelmarzetta\",\n          text: \"Omg that match was crazy\"\n        },\n        {\n          username: \"themexican_leprechaun\",\n          text: \"What a setup\"\n        },\n        {\n          username: \"dennis_futbol\",\n          text: \"It that injustice\"\n        },\n        {\n          username: \"dennis_futbol\",\n          text: \"Is\"\n        }\n      ]\n    },\n    {\n      username: \"playhearthstone\",\n      thumbnailUrl:\n        \"https://tk-assets.lambdaschool.com/c432f179-8bd7-4758-959d-d88a21f96bca_37105899_432228420518610_5035444036064772096_n.jpg\",\n      imageUrl:\n        \"https://tk-assets.lambdaschool.com/43bf01f9-319c-469d-8cf5-0120fe1007f1_yosemite.jpg\",\n      likes: 5306,\n      timestamp: \"July 14th 2017, 10:04:08 am\",\n      comments: [\n        {\n          username: \"playhearthstone\",\n          text: \"Love this shot!\"\n        },\n        {\n          username: \"awaywetravel\",\n          text: \"Yosemite is my most favorite place in the universe\"\n        },\n        {\n          username: \"awesomebt28\",\n          text: \"I like how Half Dome looks so old and useless\"\n        }\n      ]\n    }\n  ];\n  \n  export default dummyData;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nComment.propTypes = {\n    comment: PropTypes.shape({\n        username: PropTypes.string,\n        text: PropTypes.string\n    })\n}\n\nfunction Comment(props) {\n    return (\n        <div className=\"comment\">\n            <p>\n                <span>\n                    {props.comment.username}\n                </span>\n                {props.comment.text}\n            </p>\n        </div>\n    );\n}\n\nexport default Comment;","import React, {Fragment, Component} from 'react';\nimport './CommentSection.css'\nimport Comment from './Comment';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nclass CommentSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: [],\n            username: window.localStorage.getItem('username')\n        }        \n    }\n\n    componentDidMount() {\n        this.setState({\n            ...this.state,\n            comments: this.props.comments,\n            commentText: ''\n        })\n    }\n\n    changeHandler = (event) => {\n        this.setState({\n            ...this.state,\n            commentText: event.target.value\n        })\n    }\n    \n    addComment = (event) => {\n        event.preventDefault();\n        this.setState({\n            comments: [...this.state.comments, { \n                username: this.state.username,\n                text: this.state.commentText\n            }]\n        }, () => {\n            this.setState({\n                commentText: ''\n            })\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.state.comments.map((comment, index) => <Comment comment={comment} key={index} />)}\n                <p className=\"timestamp\">\n                    {(moment(this.props.timestamp, \"MMMM Do YYYY, h:mm:ss a\").fromNow()).toUpperCase()}\n                </p>\n                <form className=\"commentform\" onSubmit={this.addComment}>\n                    <input type=\"text\" name=\"commentText\" placeholder=\"Add a comment...\" value={this.state.commentText} onChange={this.changeHandler} />\n                </form>\n            </Fragment>\n        );\n    }\n    \n    \n}\n\n\nCommentSection.propTypes = {\n    comments: PropTypes.arrayOf(PropTypes.object)\n}\n\n\nexport default CommentSection;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './PostContainer.css'\nimport CommentSection from '../CommentSection/CommentSection';\n\n\nclass Post extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            likes: 0,\n        }\n        \n    }\n\n    componentDidMount() {\n        this.setState({\n            likes: this.props.post.likes,\n        })\n    }\n\n    incrementLikes = (event) => {\n        if (!event.target.classList.contains('fas')) {\n            this.setState((prevState) => {\n                return {\n                    likes: prevState.likes + 1\n                };\n            })\n        }\n        else if (event.target.classList.contains('fas')) {\n            this.setState((prevState) => {\n                return {\n                    likes: prevState.likes - 1\n                }\n            })\n        }\n        event.target.classList.toggle('fas');\n    }\n\n    render() { \n        return (\n            <div className=\"post\">\n                <div className=\"post-header\">\n                    <img src={`${this.props.post.thumbnailUrl}`} className=\"post-header__thumbnail\" alt=\"thumbnail\"/>\n                    <span>{this.props.post.username}</span>\n                </div>\n                <img src={`${this.props.post.imageUrl}`} className=\"post-image\" alt=\"main\"/>\n                <div className=\"content\">\n                    <div className=\"respond\">\n                        <i onClick={this.incrementLikes} className=\"far fa-heart\"></i>\n                        <i className=\"far fa-comment\"></i>\n                    </div>\n                    <div className=\"likes\">\n                        <span>{this.state.likes} likes</span>\n                    </div>\n                    <div className=\"comments\">\n                        <CommentSection comments={this.props.post.comments} timestamp={this.props.post.timestamp} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPost.propTypes = {\n    post: PropTypes.shape({\n        username: PropTypes.string,\n        thumbnailURL: PropTypes.string,\n        imageURL: PropTypes.string,\n        likes: PropTypes.number,\n        timestamp: PropTypes.string,\n        comments: PropTypes.arrayOf(PropTypes.object),\n    })\n}\n\nexport default Post;","import React, {Component, Fragment} from 'react';\nimport Post from './Post';\nimport PropTypes from 'prop-types';\n\n\nclass PostContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: props.posts\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        let posts = nextProps.posts.filter(postElement => postElement.username.includes(`${nextProps.searchQuery}`));\n        return ({\n            posts\n        });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.state.posts.map((postElement, index) => <Post post={postElement} key={index} />)}\n            </Fragment>\n        );\n    }\n    \n}\n\n\nPostContainer.propTypes = {\n    posts: PropTypes.arrayOf(PropTypes.object)\n}\n\n\nexport default PostContainer;","import React, {Component} from 'react';\nimport './SearchBar.css'\n\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchQuery: ''\n        }\n    }\n\n    changeHandler = (event) => {\n        this.setState({\n            searchQuery: event.target.value\n        }, () => {this.props.onSearch(this.state.searchQuery)})\n    }\n\n    render() {\n        return(\n            <div className=\"header\">\n                <div className=\"logo\">\n                    <i className=\"fab fa-instagram\"></i>\n                    <div className=\"empty-div\"></div>\n                    <img src=\"instagram_logo.svg\" alt=\"logo\" />\n                </div>\n                \n                <input className=\"searchbar\" type=\"text\" placeholder=\"Search\" value={this.state.searchQuery} onChange={this.changeHandler}></input>\n\n                <div className=\"login\">\n                    <img src=\"compass.svg\" alt=\"compass\" />\n                    <img src=\"like.svg\" alt=\"like\" />\n                    <img onClick={this.props.logOut} src=\"login.svg\" alt=\"login\" />\n                </div>\n            </div>\n            \n        );\n    }\n} \n\nexport default SearchBar;","import React, {Component} from 'react';\nimport './Login.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usernameText: '',\n            passwordText: '',\n            username: '',\n        }\n    }\n\n    submitLogin = () => {\n        window.localStorage.setItem('username', this.state.usernameText);\n        this.setState({\n            ...this.state,\n            username: window.localStorage.getItem('username')\n        })\n    }\n\n    changeHandler = (event) => {\n        this.setState({\n            ...this.state,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"loginpage\">\n                <form onSubmit={this.submitLogin}>\n                    <img src=\"instagram_logo.svg\" alt=\"logo\"></img>\n                    <input onChange={this.changeHandler} name=\"usernameText\" className=\"login-input\" type=\"text\" value={this.state.usernameText} placeholder=\"Phone number, username, or email\" />\n                    <input onChange={this.changeHandler} name=\"passwordText\" className=\"password-input\" type=\"password\" value={this.state.passwordText} placeholder=\"Password\" />\n                    <button type=\"submit\">Log in</button>\n                    <div className=\"orfacebook\">\n                        <div className=\"orfacebook-line\"></div>\n                        <div className=\"orfacebook-or\">OR</div>\n                        <div className=\"orfacebook-line\"></div>\n                    </div>\n                    <img className=\"facebook\" src=\"loginwithfacebook.png\" alt=\"facebook\" />\n                    <div className=\"forgotpassword\">Forgot password?</div>\n                </form>\n                <p>\n                </p>\n                <div className=\"app-buttons\">\n                    <div className=\"app-store\"></div>\n                    <div className=\"google-play\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport dummyData from '../../utilities/dummy_data';\nimport PostContainer from './PostContainer';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Authenticate from '../Authentication/Authenticate';\n\nclass PostPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: dummyData,\n      searchQuery: ''\n    }\n  }\n\n  onSearch(searchQuery) {\n    this.setState({\n      ...this.state,\n      searchQuery\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar logOut={this.props.logOut} onSearch={(searchQuery) => this.onSearch(searchQuery)} />\n        <PostContainer searchQuery={this.state.searchQuery} posts={this.state.posts} />\n      </div>\n    );\n  }\n}\n\nexport default Authenticate(PostPage);\n","import React, {Component} from 'react';\nimport Login from '../Login/Login';\n\nconst Authenticate = (WrappedComponent) => {\n\n\n    return class extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                username: '',\n            }\n        }\n\n        setUsername = (username) => {\n            this.setState({\n                ...this.state,\n                username: username\n            })\n        }\n\n        logOut() {\n            window.localStorage.removeItem('username');\n            window.location.reload();\n          }\n\n        render() {\n            return (window.localStorage.getItem('username')) ?\n                (\n                    <WrappedComponent logOut={this.logOut} />\n                ) :\n                (\n                    <Login />\n                )\n        }\n    }\n}\n\nexport default Authenticate;","import React, { Component } from 'react';\nimport './App.css';\nimport PostPage from './components/PostContainer/PostPage';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n\n\n  render() {\n    return (\n      <PostPage />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
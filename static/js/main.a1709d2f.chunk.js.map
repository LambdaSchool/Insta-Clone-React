{"version":3,"sources":["assets/iglogo.png","components/dummy-data.js","components/CommentSection/Comment.js","components/CommentSection/CommentInput.js","components/CommentSection/CommentSectionContainer.js","components/PostContainer/LikeSection.js","components/PostContainer/PostHeader.js","components/PostContainer/Post.js","components/PostContainer/PostContainer.js","components/SearchBar/SearchBar.js","components/PostContainer/PostPage.js","Login/Login.js","App.js","Authentication/Authenticate.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dummyData","username","thumbnailUrl","imageUrl","likes","timestamp","comments","text","Comment","props","react_default","a","createElement","className","comment","CommentInput","onSubmit","submitComment","type","value","placeholder","onChange","changeComment","CommentSection","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setComments","localStorage","setItem","postId","JSON","stringify","state","commentHandler","e","setState","target","handleCommentSubmit","preventDefault","newComment","assign","push","setTimeout","id","getItem","parse","map","c","i","CommentSection_Comment","key","CommentSection_CommentInput","React","Component","LikeSection","onClick","incrementLike","PostHeader","alt","src","PostContainer","post","PostContainer_PostHeader","PostContainer_LikeSection","CommentSectionContainer","propType","PropTypes","shape","string","posts","Post","Header","styled","header","_templateObject","LogoHeader","div","_templateObject2","LogoImage","img","_templateObject3","Divider","span","_templateObject4","InputWrap","_templateObject5","SearchInput","input","_templateObject6","IconsWrap","_templateObject7","SocialDiv","_templateObject8","SearchBar","IGLogo","searchPosts","PostPage","searchPostsHandler","filteredPosts","filter","includes","components_SearchBar_SearchBar","searchTerm","components_PostContainer_PostContainer","length","Login","handleInputChange","defineProperty","name","handleLoginSubmit","user","window","location","reload","password","reactstrap_es","color","size","Authenticate","App","_React$Component","_class","loggedIn","inherits","createClass","src_Login_Login","PostContainer_PostPage","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1709d2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iglogo.ff854302.png\";","const dummyData = [\r\n  {\r\n    username: \"philzcoffee\",\r\n    thumbnailUrl:\r\n      \"https://tk-assets.lambdaschool.com/ecd33d34-c124-4b75-92d2-e5c52c171ed8_11201517_887808411287357_1307163552_a.jpg\",\r\n\r\n    imageUrl:\r\n      \"https://tk-assets.lambdaschool.com/69cf901b-f96d-466e-a745-ff2a01effac9_philz-image.jpg\",\r\n    likes: 400,\r\n    timestamp: \"July 17th 2017, 12:42:40 pm\",\r\n    comments: [\r\n      {\r\n        username: \"philzcoffee\",\r\n        text:\r\n          \"We've got more than just delicious coffees to offer at our shops!\"\r\n      },\r\n      {\r\n        username: \"biancasaurus\",\r\n        text: \"Looks delicious!\"\r\n      },\r\n      {\r\n        username: \"martinseludo\",\r\n        text: \"Can't wait to try it!\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    username: \"fortnite\",\r\n    thumbnailUrl:\r\n      \"https://tk-assets.lambdaschool.com/ce601fdf-7cb0-4098-83d3-1a1584a72513_30841289_342445456281079_112845064497004544_n.jpg\",\r\n    imageUrl:\r\n      \"https://tk-assets.lambdaschool.com/89d13918-b7a2-4b40-9658-f376ea3f6b59_37131538_213683546146400_1083714364399157248_n.jpg\",\r\n    likes: 4307,\r\n    timestamp: \"July 15th 2017, 03:12:09 pm\",\r\n    comments: [\r\n      {\r\n        username: \"twitch\",\r\n        text: \"Epic Street Fighter action here in Las Vegas at #EVO2017!\"\r\n      },\r\n      {\r\n        username: \"michaelmarzetta\",\r\n        text: \"Omg that match was crazy\"\r\n      },\r\n      {\r\n        username: \"themexican_leprechaun\",\r\n        text: \"What a setup\"\r\n      },\r\n      {\r\n        username: \"dennis_futbol\",\r\n        text: \"Is that injustice\"\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    username: \"playhearthstone\",\r\n    thumbnailUrl:\r\n      \"https://tk-assets.lambdaschool.com/c432f179-8bd7-4758-959d-d88a21f96bca_37105899_432228420518610_5035444036064772096_n.jpg\",\r\n    imageUrl:\r\n      \"https://tk-assets.lambdaschool.com/43bf01f9-319c-469d-8cf5-0120fe1007f1_yosemite.jpg\",\r\n    likes: 5306,\r\n    timestamp: \"July 14th 2017, 10:04:08 am\",\r\n    comments: [\r\n      {\r\n        username: \"playhearthstone\",\r\n        text: \"Love this shot!\"\r\n      },\r\n      {\r\n        username: \"awaywetravel\",\r\n        text: \"Yosemite is my most favorite place in the universe\"\r\n      },\r\n      {\r\n        username: \"awesomebt28\",\r\n        text: \"I like how Half Dome looks so old and useless\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default dummyData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CommentSection.css';\r\n\r\nconst Comment = props => {\r\n    return (\r\n        <div className='comment-text'>\r\n        <span className='comment'>{props.comment.text}</span>{' '}\r\n        <span className='user'>-{props.comment.username}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nComment.propTypes = {\r\n    comment: PropTypes.shape({\r\n        text: PropTypes.string,\r\n        username: PropTypes.string\r\n    })\r\n};\r\n\r\nexport default Comment;","import React from 'react';\r\n\r\nconst CommentInput = props => {\r\n    return (\r\n        <form onSubmit={props.submitComment}>\r\n            <input\r\n            type='text'\r\n            value={props.comment}\r\n            placeholder='Add comment...'\r\n            onChange={props.changeComment}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CommentInput;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Comment from './Comment';\r\nimport CommentInput from './CommentInput';\r\n\r\nclass CommentSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: props.comments,\r\n            comment: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.postId;\r\n        if (localStorage.getItem(id)) {\r\n        this.setState({\r\n            comments: JSON.parse(localStorage.getItem(this.props.postId))\r\n        });\r\n        } else {\r\n            this.setComments();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setComments();\r\n    }\r\n\r\n    setComments = () => {\r\n        localStorage.setItem(\r\n            this.props.postId,\r\n            JSON.stringify(this.state.comments)\r\n        );\r\n    };\r\n\r\n    commentHandler = e => {\r\n        this.setState({ comment: e.target.value });\r\n    };\r\n\r\n    handleCommentSubmit = e => {    // Comment submit handler. Allows you to input a comment into the Add a comment... bar.\r\n        e.preventDefault();\r\n        const newComment = { text: this.state.comment, username: 'jessetheisen'}; // newComment var, when you add a new comment whatever username you set in username: '' will display that username on the page.\r\n        const comments = Object.assign([], this.state.comments);\r\n       // console.log(comments); for testing purposes\r\n        comments.push(newComment)\r\n        this.setState({ comments, comment: ''});\r\n        setTimeout(() => {\r\n            this.setComments();\r\n        }, 500);\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.comments.map((c,i) => <Comment key ={i} comment={c} />)}\r\n                <CommentInput\r\n                 comment={this.state.comment}\r\n                 submitComment={this.handleCommentSubmit}\r\n                 changeComment={this.commentHandler}\r\n                  />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCommentSection.propTypes = {\r\n    comments: PropTypes.arrayOf(\r\n        PropTypes.shape({ text: PropTypes.string, username: PropTypes.string})\r\n    )\r\n};\r\n\r\nexport default CommentSection;","import React from 'react';\r\n\r\nconst LikeSection = props => {\r\n    return [\r\n        <div\r\n        className='like-section'\r\n        key='likes-icons-container'\r\n        onClick={props.incrementLike}\r\n        >\r\n        <div className='like-section-wrapper'>\r\n            <i className='far fa-heart fa-2x' />\r\n        </div>\r\n\r\n        <div className='like-section-wrapper'>\r\n            <i className='far fa-comment fa-2x' />\r\n        </div>\r\n        </div>,\r\n\r\n        <div className='like-section' key='likes-container'>\r\n            <div className='like-section-wrapper'>{props.likes}</div>\r\n        </div>\r\n    ];\r\n};\r\n\r\nexport default LikeSection;","import React from 'react';\r\nimport './PostContainer.css';\r\n\r\nconst PostHeader = props => {\r\n    return (\r\n        <div className='post-header'>\r\n        <div className='post-thumb-wrap'>\r\n\r\n        <img\r\n        alt='post header'\r\n        className='post-thumb'\r\n        src={props.thumbnailUrl}\r\n        />\r\n        </div>\r\n        <div>{props.username}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostHeader;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CommentSection from '../CommentSection/CommentSectionContainer';\r\nimport LikeSection from './LikeSection';\r\nimport PostHeader from './PostHeader';\r\nimport './PostContainer.css';\r\n\r\nclass PostContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      likes: props.post.likes\r\n    };\r\n  }\r\n\r\n  incrementLike = () => {\r\n    let likes = this.state.likes + 1;\r\n    this.setState({ likes});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='post-border'>\r\n        <PostHeader\r\n        username={this.props.post.username}\r\n        thumbnailUrl={this.props.post.thumbnailUrl}\r\n        />\r\n\r\n        <div className='post-image-wrapper'>\r\n          <img\r\n          alt='post thumbnail'\r\n          className='post-image'\r\n          src={this.props.post.imageUrl}\r\n          />\r\n        </div>\r\n        <LikeSection\r\n        incrementLike={this.incrementLike}\r\n        likes={this.state.likes}\r\n        />\r\n        <CommentSection\r\n        postId={this.props.post.imageUrl}\r\n        comments={this.props.post.comments}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostContainer.propType = {\r\n  post: PropTypes.shape({\r\n    username: PropTypes.string,\r\n    thumbnailUrl: PropTypes.string,\r\n    imageUrl: PropTypes.string\r\n  })\r\n};\r\n\r\nexport default PostContainer;","import React from 'react';\r\nimport Post from './Post';\r\nimport './PostContainer.css';\r\n\r\n\r\n\r\nconst PostContainer = props => {\r\n    return (\r\n        <div className='post-container'>\r\n            {props.posts.map(p => <Post key={p.imageUrl} post={p} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostContainer;","import React from 'react';\r\nimport IGLogo from '../../assets/iglogo.png';\r\nimport './SearchBar.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  border-bottom: 1px solid #333;\r\n  height: 80px;\r\n  line-height: 70px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background: #FFFFFF;\r\n`;\r\n\r\nconst LogoHeader = styled.div `\r\n  width: 300px;\r\n  line-height: 75px;\r\n`;\r\n\r\nconst LogoImage = styled.img`\r\n  height: 50%;\r\n  padding: 0px 15px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  width: 50px;\r\n`;\r\n\r\nconst InputWrap = styled.div`\r\n  width: 300px;\r\n  margin: auto;\r\n  display: flex;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  height: 30px;\r\n  width: 300px;\r\n  text-align: center;\r\n`;\r\n\r\nconst IconsWrap = styled.div`\r\n  display: flex;\r\n  width: 300px;\r\n`;\r\n\r\nconst SocialDiv = styled.div`\r\n  width: 50px;\r\n`;\r\n\r\nconst SearchBar = props => {\r\n    return (\r\n      <Header>\r\n      <LogoHeader>\r\n      <LogoImage alt=\"instagram logo\" src={IGLogo} />\r\n      <Divider>|</Divider>\r\n      </LogoHeader>\r\n      <InputWrap>\r\n      <SearchInput\r\n      type='text'\r\n      placeholder='Search'\r\n      onChange={props.searchPosts}\r\n      />\r\n      </InputWrap>\r\n      <IconsWrap>\r\n        <SocialDiv>\r\n          <i className=\"far fa-compass fa-3x\" />\r\n        </SocialDiv>\r\n        <SocialDiv>\r\n          <i className=\"far fa-heart fa-3x\" />\r\n        </SocialDiv>\r\n        <SocialDiv>\r\n          <i className=\"far fa-user-circle fa-3x\" />\r\n        </SocialDiv>\r\n      </IconsWrap>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport dummyData from '../dummy-data';\r\nimport PostContainer from './PostContainer';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nclass PostPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          posts: [],\r\n          filteredPosts: []\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.setState({ posts: dummyData});\r\n      }\r\n    \r\n      searchPostsHandler = e => {\r\n        this.setState({\r\n          filteredPosts: this.state.posts.filter(p => {\r\n           return p.username.includes(e.target.value) \r\n          \r\n          })\r\n        })\r\n      };\r\n    \r\n      render() {\r\n        return (\r\n          <div className='App'>\r\n\r\n            <SearchBar \r\n              searchTerm={this.state.searchTerm}\r\n              searchPosts={this.searchPostsHandler}\r\n            />\r\n            <PostContainer posts={this.state.filteredPosts.length > 0\r\n            ? this.state.filteredPosts\r\n            : this.state.posts \r\n            }\r\n            />\r\n           </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    export default PostPage;","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleLoginSubmit = e => {\r\n        const user = this.state.username;\r\n        localStorage.setItem('user', user);\r\n        window.location.reload();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form className='login-form'>\r\n                <h3>Welcome to React Insta Clone</h3>\r\n                <div>Please Login</div>\r\n                <FormGroup>\r\n                    <Input\r\n                    type='text'\r\n                    placeholder='Enter username'\r\n                    name='username'\r\n                    value={this.state.username}\r\n                    onChange={this.handleInputChange}\r\n                    />\r\n                    <Button color='success' size='large' onClick={this.handleLoginSubmit}>\r\n                    Log In\r\n                    </Button>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        name='password'\r\n                        value={this.state.password}\r\n                        onChange={this.handleInputChange}\r\n                        />\r\n                    </FormGroup>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport PostPage from './components/PostContainer/PostPage';\r\nimport Authenticate from './Authentication/Authenticate';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <PostPage />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default  Authenticate(App);\r\n","import React from 'react';\r\nimport Login from '../Login/Login';\r\n\r\nconst Authenticate = App =>\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                loggedIn: false\r\n            };\r\n        }\r\n\r\n        componentDidMount() {\r\n            if (!localStorage.getItem('user')) {\r\n                this.setState({ loggedIn: false });\r\n            }else {\r\n                this.setState({ loggedIn: true });\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if (this.state.loggedIn) return <App />;\r\n            return <Login />;\r\n        }\r\n        \r\n    };\r\n\r\n    export default Authenticate;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}